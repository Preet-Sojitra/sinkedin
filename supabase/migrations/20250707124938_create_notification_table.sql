-- First, create a custom type for the different kinds of notifications
CREATE TYPE public.notification_type AS ENUM (
  'new_follower',
  'new_comment',
  'new_reaction'
);

-- public.notifications table
CREATE TABLE public.notifications (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  
  -- Who is this notification FOR?
  recipient_user_id UUID NOT NULL REFERENCES public.profiles(id) ON DELETE CASCADE,
  
  -- Who CAUSED this notification?
  triggering_user_id UUID NOT NULL REFERENCES public.profiles(id) ON DELETE CASCADE,
  
  -- What type of notification is it?
  type notification_type NOT NULL,
  
  -- What content is this related to? (nullable)
  post_id BIGINT REFERENCES public.posts(id) ON DELETE CASCADE,
  
  -- Has the user seen it yet?
  is_read BOOLEAN NOT NULL DEFAULT FALSE,
  
  created_at TIMESTAMPTZ DEFAULT NOW(),

  -- Make sure a user isn't notified about their own actions
  CONSTRAINT check_not_self_notification CHECK (recipient_user_id <> triggering_user_id)
);

-- Create an index for fast lookups of a user's notifications
CREATE INDEX idx_notifications_recipient ON public.notifications(recipient_user_id);

-- Comments
COMMENT ON TABLE public.notifications IS 'Stores notifications for users.';
COMMENT ON COLUMN public.notifications.recipient_user_id IS 'The user who should receive the notification.';
COMMENT ON COLUMN public.notifications.triggering_user_id IS 'The user who triggered the notification (e.g., the follower, the commenter).';
COMMENT ON COLUMN public.notifications.post_id IS 'The post related to the notification (for comments/reactions).';


--
-- RLS POLICIES FOR 'notifications' TABLE
--

-- 1. Enable RLS on the table
ALTER TABLE public.notifications ENABLE ROW LEVEL SECURITY;

-- 2. Policy for SELECT (reading notifications)
-- A user can only fetch rows where they are the recipient.
CREATE POLICY "Users can view their own notifications."
  ON public.notifications FOR SELECT
  USING (auth.uid() = recipient_user_id);

-- 3. Policy for UPDATE (marking as read)
-- A user can only update rows (e.g., set is_read = true) where they are the recipient.
CREATE POLICY "Users can update their own notifications."
  ON public.notifications FOR UPDATE
  USING (auth.uid() = recipient_user_id);

-- 4. Policy for DELETE (clearing notifications)
-- A user can only delete notifications intended for them.
CREATE POLICY "Users can delete their own notifications."
  ON public.notifications FOR DELETE
  USING (auth.uid() = recipient_user_id);